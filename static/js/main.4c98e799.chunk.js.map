{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","console","info","toLocaleTimeString","setState","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","slice","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAEhCC,QAAQC,KAAK,EAAKR,MAAMC,KAAKQ,sBAC7B,EAAKC,SAAS,CAAET,KAAM,IAAIC,SACzB,OAZP,gCAeE,SAAmBS,GACjB,IAAQC,EAASR,KAAKS,MAAdD,KAEJD,EAAUC,OAASR,KAAKS,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDA,MApBzD,kCAwBE,WACEP,OAAOU,cAAcX,KAAKD,WAzB9B,oBA4BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAW,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGf,EAAKQ,8BAzChB,GAA2BQ,IAAMC,W,MCNjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAQX,IAAMI,EAAb,4MACExB,MAAyB,CACvByB,UAAU,EACVC,UAAW,WAHf,uDAME,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKpB,SAAS,CAAEe,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKlB,SAAS,CAAEe,UAAU,OAG5BpB,OAAOC,aAAY,WACjB,EAAKI,SAAS,CAAEgB,UAAWP,QAC1B,QAnBP,oBAsBE,WACE,MAAgCf,KAAKJ,MAA7B0B,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKT,UAAU,MAAf,UACE,6CACCS,GAAY,cAAC,EAAD,CAAOb,KAAMc,WA5BlC,GAAyBT,IAAMC,WCZ/Ba,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.4c98e799.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      // eslint-disable-next-line no-console\n      console.info(this.state.date.toLocaleTimeString());\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { name } = this.props;\n\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}